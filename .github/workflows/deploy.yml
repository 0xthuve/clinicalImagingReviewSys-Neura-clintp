name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}
      APP_NAME: nextjs-app
      MONGO_URI: ${{ secrets.MONGO_URI }}   # ← Add your Mongo URI here

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}   # ← Ensure it's available during build

      - name: Build Docker image
        run: |
          docker build -t ${{ env.APP_NAME }}:latest .
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}   # ← Pass to Docker build if needed

      - name: Save Docker image as tar
        run: |
          docker save ${{ env.APP_NAME }}:latest -o ${{ env.APP_NAME }}.tar

      - name: Copy Docker image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          source: "${{ env.APP_NAME }}.tar"
          target: "~/${{ env.APP_NAME }}.tar"

      - name: Load and run Docker image on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            docker load -i ~/${{ env.APP_NAME }}.tar
            docker stop ${{ env.APP_NAME }} || true
            docker rm ${{ env.APP_NAME }} || true
            docker run -d --name ${{ env.APP_NAME }} -p 3000:3000 \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              ${{ env.APP_NAME }}:latest
