name: Deploy to AWS EC2 via Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      APP_NAME: brea-can
      DOCKER_IMAGE: thuvecodes/brea-can

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 3.5: Create .env.local for build
      - name: Create .env.local
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env.local
        shell: bash

      # Step 4: Build project
      - name: Build project
        run: npm run build

      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:latest .

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 7: Push Docker image
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_IMAGE }}:latest

      # Step 8: SSH into EC2 and deploy
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ env.DOCKER_IMAGE }}:latest
            docker stop ${{ env.APP_NAME }} || true
            docker rm ${{ env.APP_NAME }} || true
            docker run -d --name ${{ env.APP_NAME }} -p 3000:3000 \
              -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
              ${{ env.DOCKER_IMAGE }}:latest
             # ⬇️ Add these two lines:
          timeout: 600           # total connection timeout (default 30s)
          command_timeout: 600   # script execution timeout (default 60s)
